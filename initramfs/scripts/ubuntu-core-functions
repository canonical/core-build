# -*- shell-script -*-

pre_mountroot()
{
	local script_dir="/scripts/local-top"
	[ "$quiet" != "y" ] && log_begin_msg "Running $script_dir"
	run_scripts "$script_dir"
	[ "$quiet" != "y" ] && log_end_msg
}

# Determine full path to disk partition given a filesystem label.
get_partition_from_label()
{
	local label="$1"

	[ -n "$label" ] || panic "need FS label"

	# Make sure the device has been created by udev before looking for it
	# Don't need to panic, since the output will be validated outside this function
	wait-for-root "LABEL=$label" "${ROOTDELAY:-180}" >/dev/null || true

	local part=$(find /dev -name "$label"|tail -1)
	[ -z "$part" ] && return
	local path=$(readlink -f "$part")
	[ -n "$path" ] && echo "$path"
}

# setup $writable_mnt
do_root_mounting()
{
	root="LABEL=$writable_label"

	# Make sure the device has been created by udev before we try to mount
	wait-for-root "$root" "${ROOTDELAY:-180}" || panic "unable to find root partition '$root'"

	# FIXME: This is never false since we set $root above
	[ -n "$root" ] || panic "no root partition specified"

	if echo "$root" | grep -q ^/; then
		path="$root"
	else
		# convert UUID/LABEL to a device name
		path=$(findfs "$root" 2>/dev/null || :)
	fi

	[ -e "$path" ] || panic "root device $path does not exist"

	# try loading squashfs, but don't fail if its e.g. in the kernel
	# already
	modprobe squashfs || true

	if ! grep -q squashfs /proc/filesystems; then
		 panic "no squashfs support found in your system, aborting"
	fi

	# mount writable rw
	path=$(get_partition_from_label "$writable_label")
	mount "$path" "$writable_mnt"
}

mount_recovery()
{
	# Mount the system-recovery partition, if it is found
	recovery_partition=$(findfs LABEL="system-recovery" 2>/dev/null)
	echo "Recovery partition: $recovery_partition" >/dev/kmsg || true

	if [ -n "$recovery_partition" ]; then
		echo "Found recovery partition: $recovery_partition" >/dev/kmsg || true
		# Mount the seed directory from the recovery partition (read-only)
		recovery="/recovery"
		seed_dir="${writable_mnt}/system-data/var/lib/snapd/seed"
		mkdir -p "${recovery}"
		mkdir -p "${seed_dir}"
		mount -o ro "$recovery_partition" "$recovery"
		mount -o bind "$recovery/seed" "$seed_dir"
	fi
}
